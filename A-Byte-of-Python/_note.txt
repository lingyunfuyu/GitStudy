Python的官方介绍是：
    Python是一种简单易学，功能强大的编程语言，它有高效率的高层数据结构，简单而有效地实现面向对象编程。Python简洁的语法和对动态输入的支持，再加上解释性语言的本质，使得它在大多数平台上的许多领域都是一个理想的脚本语言，特别适用于快速的应用程序开发。

    Python语言写的程序不需要编译成二进制代码。可以直接从源代码运行程序，在计算机内部Python解释器把源代码转换成中间形式（字节码），然后再把它翻译成计算机使用的机器语言并运行。————xh：类似于java？

    Python既支持面向过程的编程，也支持面向对象的编程。在【面向过程】的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的；在【面向对象】的语言中，程序是由数据和功能组合而成的对象构建起来的。 
    
    Python是对大小写敏感的。

    如果你需要某个Python函数或者语句的快速信息帮助，那么你可以使用内建的help功能。比如，运行help(str)会显示str类的帮助，运行help('print')【注意：需要有引号】获取print语句的帮助，按q退出。另外，可以使用help()学习更多关于help本身的东西。

    Python中有4种类型的数——整数、长整数、浮点数、复数。
    2是一个整数的例子，长整数不过是大一些的整数，3.23和52.3E-4是浮点数的例子，(-5+4j)和(2.3-4.6j)是复数的例子。

    字符串是字符的序列，有以下用法：
    1、使用单引号(')
    单引号内的所有空白（即空格和制表符）都原样保留。
    2、使用双引号(")
    双引号内的字符串和单引号中的字符串使用完全相同。
    3、使用三引号('''或""")
    使用三引号可以指示一个多行字符串。
    可以在三引号中使用单引号和双引号。
    4、转义符（反斜杠\）
    print 'What\'s your name?'
    也可以使用下面方法：
    print "What's your name?"
    双引号中使用双引号本身，可以借助转义符；可以用转义符\\来指示反斜杠本身。
    注意：在一个字符串中，行末的单独一个反斜杠表示字符串在下一行继续。
    如：
    print "First sentence.\
    Second sentence."
    等价于：
    print "First sentence. Second sentence."
    5、自然字符串
    不需要如转义符那样的特别处理的字符串，可以给字符串加上前缀r或者R来指定自然字符串。如：print r"New lines are indicated by \n"
    6、Unicode字符串
    Python允许处理Unicode文本，只需要在字符串前面加上前缀u或U即可。
    记住，在你处理文本文件的时候使用Unicode字符串，特别是当你知道这个文件含有用非英语的语言写的文本。————xh：处理【文本文件】的时候使用？文件含有【非英语的语言写的文本】是指中文、日文等？
    7、字符串是不可变的
    这意味着，一旦你创造了一个字符串，就不能再改变它了。
    8、按字面意义级联
    如果把多个字符串按字面意义相邻放着，它们会被Python自动级联。
    如：
    >>> s = 'What\'s'' your name' #这里是两个字符串
    >>> s
    "What's your name" #这里是一个字符串

    Python中没有char这个数据类型。
    Python中的单引号字符串和双引号字符串是完全相同的，没有在任何方面有不同。
    一定要使用【自然字符串】（加前缀r或者R）处理正则表达式，否则会需要使用很多的反斜杠(\)
    

    Python中使用变量时，只需要给变量赋一个值，不需要声明或定义数据类型。 


    Python中可以使用分号(;)来标明逻辑行/语句的结束，但是强烈不被建议。
    如：
    i = 5; print i;
    注意，强烈不建议这么写。应该坚持每个物理行只写一句逻辑行。
    
    如果逻辑行太长，可以在多个物理行写一个逻辑行。如：
    s = 'This is a string. \
    This continues the string.'
    print s
    类似的，
    print \
    i
    等价于：
    print i
    反斜杠\被称为【明确的行连接】，对应的【暗示的行连接】则是指逻辑行中使用了圆括号、方括号、花括号，比如列表、字典等。

    
    Python中的缩进强烈建议使用单个制表符、两个空格、四个空格来表示；而且最好永远只使用一种风格。

    
    一些特殊运算符：
    **：幂，返回x的y次幂。
    //：取整除，返回商的整数部分。
    %：取模，返回除法的余数。
    <=：小于等于。
    >=：大于等于。
    ==：等于，比较对象是否相等。
    !=：不等于，比较两个对象是否不相等。
    not：布尔非，注意不同于按位异或(^)，不同于按位翻转(~)。
    and：布尔与，注意不同于按位与(&)
    or：布尔或，注意不同于按位或(|)


    Python根据实际情况智能的添加空格，如下面的等于号(=)后面，本来没有空格，输出结果会自动添加。
    >>> print '2 * 2 * 2 * 2 =', 2**4    
    >>> 2 * 2 * 2 * 2 = 16
    
    Python中没有switch语句，可以使用if...elif...else语句来替代完成(在某些场合，使用字典则会更加快捷)。

    Python中可以在while、for循环中使用一个else从句，这个从句总是在for循环结束后执行一次，除非遇到break语句。
    range内建函数生成序列，range(1, 5) = [1, 2, 3, 4]；range(1, 5, 2) = [1, 3]，注意range包含左边界，不包含右边界。
    

    注意：当你在函数内声明变量的时候，它与函数外具有相同名称的变量没有任何关系，也就是说这个变量名称对于函数来说是【局部】的，这称为变量的作用域。所有变量的作用域是它们被定义的块，即它们的名称被定义的那点开始。
    可以使用global声明全局变量，但是这样做不被建议，所以不详细说明。
    
    
    默认参数值应该是一个参数，是不可变的。
    只能在形参表末尾的那些参数可以有默认参数值（即，在声明函数形参的时候，不能先声明有默认值的形参而后声明没有默认值的形参），如def func(a = 5, b)是无效的。

    如果某个函数有许多参数，而你只想指定其中的一部分参数的值，那么你可以通过命名来为这些参数赋值，这被称为【关键参数】，这样则不必担心参数顺序，如果其他参数都有默认值，则可以只给需要的参数赋值。比如：
    def func(name, age=6, city='Beijing'):
        pass
    可以指定部分参数，func('HanMeimei', 7)；
    但是如果想指定name和city，则需要使用关键参数，func('HanMeimei', city = 'Tianjin');
    还可以随意调换顺序，func(city = 'Tianjin', name = 'HanMeimei')

    Python函数如果没有return语句，则默认结尾暗含return None
    None是Python中表示没有任何东西的特殊类型。

    
    文档字符串DocStrings的惯例是一个【多行字符串】，首行以【大写字母】开始，【句号】结尾。第二行是【空行】，从第三行开始是详细的描述。这是强烈建议的做法。
    可以使用__doc__调用函数的文档字符串熟悉（属于函数的名称），如print func.__doc__
    

