Python的官方介绍是：
    Python是一种简单易学，功能强大的编程语言，它有高效率的高层数据结构，简单而有效地实现面向对象编程。Python简洁的语法和对动态输入的支持，再加上解释性语言的本质，使得它在大多数平台上的许多领域都是一个理想的脚本语言，特别适用于快速的应用程序开发。

    Python语言写的程序不需要编译成二进制代码。可以直接从源代码运行程序，在计算机内部Python解释器把源代码转换成中间形式（字节码），然后再把它翻译成计算机使用的机器语言并运行。————xh：类似于java？

    Python既支持面向过程的编程，也支持面向对象的编程。在【面向过程】的语言中，程序是由过程或仅仅是可重用代码的函数构建起来的；在【面向对象】的语言中，程序是由数据和功能组合而成的对象构建起来的。 
    
    Python是对大小写敏感的。

    如果你需要某个Python函数或者语句的快速信息帮助，那么你可以使用内建的help功能。比如，运行help(str)会显示str类的帮助，运行help('print')【注意：需要有引号】获取print语句的帮助，按q退出。另外，可以使用help()学习更多关于help本身的东西。

    Python中有4种类型的数——整数、长整数、浮点数、复数。
    2是一个整数的例子，长整数不过是大一些的整数，3.23和52.3E-4是浮点数的例子，(-5+4j)和(2.3-4.6j)是复数的例子。

    字符串是字符的序列，有以下用法：
    1、使用单引号(')
    单引号内的所有空白（即空格和制表符）都原样保留。
    2、使用双引号(")
    双引号内的字符串和单引号中的字符串使用完全相同。
    3、使用三引号('''或""")
    使用三引号可以指示一个多行字符串。
    可以在三引号中使用单引号和双引号。
    4、转义符（反斜杠\）
    print 'What\'s your name?'
    也可以使用下面方法：
    print "What's your name?"
    双引号中使用双引号本身，可以借助转义符；可以用转义符\\来指示反斜杠本身。
    注意：在一个字符串中，行末的单独一个反斜杠表示字符串在下一行继续。
    如：
    print "First sentence.\
    Second sentence."
    等价于：
    print "First sentence. Second sentence."
    5、自然字符串
    不需要如转义符那样的特别处理的字符串，可以给字符串加上前缀r或者R来指定自然字符串。如：print r"New lines are indicated by \n"
    6、Unicode字符串
    Python允许处理Unicode文本，只需要在字符串前面加上前缀u或U即可。
    记住，在你处理文本文件的时候使用Unicode字符串，特别是当你知道这个文件含有用非英语的语言写的文本。————xh：处理【文本文件】的时候使用？文件含有【非英语的语言写的文本】是指中文、日文等？
    7、字符串是不可变的
    这意味着，一旦你创造了一个字符串，就不能再改变它了。
    8、按字面意义级联
    如果把两个字符串按字面意义相邻放着，它们会被Python自动级联。
    如：
    >>> s = 'What\'s'' your name' #这里是两个字符串
    >>> s
    "What's your name" #这里是一个字符串


